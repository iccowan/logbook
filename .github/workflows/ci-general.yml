name: build and test

on: [push, pull_request]

jobs:
  build:

    name: build and test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: setup postgresql
      # You may pin to the exact commit or the version.
      # uses: Harmon758/postgresql-action@0be19fa37850b22cb4c9bbf28a03abbf44abd863
      uses: Harmon758/postgresql-action@v1.0.0
      with:
        # POSTGRES_DB - name for the default database that is created
        postgresql db: logbook_dev
        # POSTGRES_USER - create the specified user with superuser power
        postgresql user: postgres
        # POSTGRES_PASSWORD - superuser password
        postgresql password: postgres

    - name: load/save cache
      uses: actions/cache@v2.1.6
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: |
            deps
            _build
        # An explicit key for restoring and saving the cache
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
            ${{ runner.os }}-mix-

    - name: set up elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: '1.12.3' # Define the elixir version [required]
        otp-version: '22.3' # Define the OTP version [required]

    - name: set up hex (mix local.hex --force)
      run: mix local.hex --force
      
    - name: set up rebar (mix local.rebar --force)
      run: mix local.rebar --force

    - name: get dependencies (mix deps.get)
      run: mix deps.get

    - name: audit dependencies (mix deps.audit)
      run: mix deps.audit

    - name: sobelow security check (mix sobelow --verbose --exit)
      run: mix sobelow --verbose --exit

    - name: credo code analysis (mix credo --all)
      run: mix credo --all --verbose

    - name: dialyzer code analysis (mix dialyzer)
      run: mix dialyzer

    - name: run tests (mix test)
      run: mix test
      
    - name: notify slack on success
      if: success()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: logbook-ci
        SLACK_USERNAME: GitHub Actions
        SLACK_ICON_EMOJI: ':technologist:'
        SLACK_COLOR: ${{ job.status }}
        SLACK_TITLE: ':white_check_mark: Build PASSING'
        SLACK_FOOTER: 'git@github.com:iccowan/logbook.git'
    
    - name: notify slack on fail
      if: failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: logbook-ci
        SLACK_USERNAME: GitHub Actions
        SLACK_ICON_EMOJI: ':technologist:'
        SLACK_COLOR: ${{ job.status }}
        SLACK_TITLE: ':x: Build FAILING'
        SLACK_FOOTER: 'git@github.com:iccowan/logbook.git'
